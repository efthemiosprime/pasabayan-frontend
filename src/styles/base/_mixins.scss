/* Mixins */

// Media Queries
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: ($breakpoint-sm - 1)) { @content; }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) { @content; }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) { @content; }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) { @content; }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) { @content; }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) { @content; }
  }
}

// Flexbox
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// Grid
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Transitions
@mixin transition($property: all, $duration: 0.2s, $timing: ease-in-out) {
  transition: $property $duration $timing;
}

// Box shadow
@mixin box-shadow($shadow: $box-shadow) {
  box-shadow: $shadow;
}

// Text truncation
@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Center element (absolute positioning)
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Button styles
@mixin button-variant($bg-color, $text-color: $white, $hover-bg-color: darken($bg-color, 10%)) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover, &:focus {
    background-color: $hover-bg-color;
    color: $text-color;
  }
}

// Card styles
@mixin card {
  background-color: $white;
  border-radius: $border-radius;
  padding: $spacing-lg;
  @include box-shadow;
}

// Container padding
@mixin container-padding {
  padding-left: $spacing-md;
  padding-right: $spacing-md;
  
  @include respond-to(md) {
    padding-left: $spacing-lg;
    padding-right: $spacing-lg;
  }
}

// Border
@mixin border($color: $gray-300, $width: $border-width, $style: solid) {
  border: $width $style $color;
}

// Hover effect
@mixin hover-lift {
  transition: $transition-base;
  
  &:hover {
    transform: translateY(-3px);
    @include box-shadow($box-shadow-lg);
  }
} 